#!/usr/bin/env ruby
#  Copyright (C) 2007 Janico Greifenberg <jgre@jgre.org> and 
#  Dirk Kutscher <dku@tzi.org>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# $Id$

$:.unshift File.join(File.dirname(__FILE__), "../..", "lib")

require "event-loop/timer"

require "rdtnlog"
require "rdtnevent"
require "flutecl"
require "bundle"
require "optparse"
require "bundle"

opts = OptionParser.new do |opts|
  opts.on("-d", "--directory DIR", "Papageno incoming directory") do |dir|
    @ppgDir = File.expand_path(dir)
  end

  opts.on("-i", "--interval INT", "Poll interval in seconds") do |inter|
    @pollInterval = inter.to_i
  end
  opts.on("-s", "--flute-send EXECUTABLE", "Path to the flute-send executable") do |exec|
    @ppgProg = File.expand_path(exec)
  end
end

args = ARGV.join(" ")
opts.parse!(ARGV)

fluteIF = FluteCL::FluteInterface.new("flute0", args)
bl = Bundling::BundleLayer.new
EventDispatcher.instance.subscribe(:bundleParsed) do |bundle|
  puts "Received Bundle from #{bundle.srcEid} for #{bundle.destEid}"
  puts bundle.payload
end

EventLoop.run
