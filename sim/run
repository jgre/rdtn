#!/usr/bin/env ruby
$:.unshift File.join(File.dirname(__FILE__))

require 'core'
require 'optparse'

parallel = 1
git      = false
variants = false
opts     = OptionParser.new
opts.on('-p[=N]', '--parallel[=N]', Integer) {|n| parallel = n || 2}
opts.on('-g', '--git')                       {git      = true}
opts.on('-v', '--with-variants')             {variants = true}
specs    = opts.parse(ARGV)

if git
  system("git commit -a")
  # get commit hash
  revision = IO.popen("git log -n1") {|p| p.read}
end

if variants
  specs = specs.inject([]) do |memo, spec|
    memo + Sim::Specification.loadSpec(spec).createVariants
  end
end

active_procs = []
until specs.empty?
  if active_procs.length < parallel
    spec = specs.shift
    active_procs << fork do
      dirname = Sim::Core.runBySpec(spec)
      # write commit hash to dirname/revision
      open(File.join(dirname, "revision"), "w") {|f| f.write(revision.to_s)}
    end
  else
    active_procs.delete(Process.wait)
  end
end

Process.waitall
